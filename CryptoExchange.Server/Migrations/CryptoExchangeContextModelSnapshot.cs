// <auto-generated />
using System;
using CryptoExchange.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CryptoExchange.Server.Migrations
{
    [DbContext(typeof(CryptoExchangeContext))]
    partial class CryptoExchangeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CryptoExchange.Server.Model.OrderBook", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Ticker")
                        .HasColumnType("int");

                    b.Property<long>("Timestamp")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("OrderBook");
                });

            modelBuilder.Entity("CryptoExchange.Server.Model.PriceQuoteAsk", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("OrderBookId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(20,10)");

                    b.Property<decimal>("SumVolume")
                        .HasColumnType("decimal(20,10)");

                    b.Property<decimal>("Volume")
                        .HasColumnType("decimal(20,10)");

                    b.HasKey("Id");

                    b.HasIndex("OrderBookId");

                    b.ToTable("PriceQuoteAsk");
                });

            modelBuilder.Entity("CryptoExchange.Server.Model.PriceQuoteBid", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("OrderBookId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(20,10)");

                    b.Property<decimal>("SumVolume")
                        .HasColumnType("decimal(20,10)");

                    b.Property<decimal>("Volume")
                        .HasColumnType("decimal(20,10)");

                    b.HasKey("Id");

                    b.HasIndex("OrderBookId");

                    b.ToTable("PriceQuoteBid");
                });

            modelBuilder.Entity("CryptoExchange.Server.Model.PriceQuoteAsk", b =>
                {
                    b.HasOne("CryptoExchange.Server.Model.OrderBook", "OrderBook")
                        .WithMany("Asks")
                        .HasForeignKey("OrderBookId");

                    b.Navigation("OrderBook");
                });

            modelBuilder.Entity("CryptoExchange.Server.Model.PriceQuoteBid", b =>
                {
                    b.HasOne("CryptoExchange.Server.Model.OrderBook", "OrderBook")
                        .WithMany("Bids")
                        .HasForeignKey("OrderBookId");

                    b.Navigation("OrderBook");
                });

            modelBuilder.Entity("CryptoExchange.Server.Model.OrderBook", b =>
                {
                    b.Navigation("Asks");

                    b.Navigation("Bids");
                });
#pragma warning restore 612, 618
        }
    }
}
